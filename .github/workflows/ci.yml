name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ created ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, 3.10]
        pandas-version: [1.3.5, 1.4.0]
        exclude:        
          - python-version: 3.7
            pandas-version: 1.4.0
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Load cache
      uses: actions/cache@v1
      env:
        cache-name: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ matrix.python-version }}-${{ matrix.pandas-version }}-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel twine
        pip install pandas==${{ matrix.pandas-version }}
        pip install .[all]        
        pip freeze
    - name: Pytest
      run: pytest
    - name: Test packaging
      run: python setup.py sdist bdist_wheel
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: [test]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*